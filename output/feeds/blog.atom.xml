<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>- blog</title><link href="/" rel="alternate"></link><link href="/feeds/blog.atom.xml" rel="self"></link><id>/</id><updated>2024-12-28T00:00:00-08:00</updated><entry><title>Japanese Slang: 無敵の人</title><link href="/japanese-slang-wu-di-noren.html" rel="alternate"></link><published>2024-12-28T00:00:00-08:00</published><updated>2024-12-28T00:00:00-08:00</updated><author><name>Andrew Dang-Tran</name></author><id>tag:None,2024-12-28:/japanese-slang-wu-di-noren.html</id><summary type="html">&lt;p&gt;無敵の人 romanizes to muteki no hito and translates to "Invincible Man". A common translation of 敵 is "enemy" and 無_ often means without _. On first reading, I translated the phrase literally to "a person without enemies" &lt;sup id="fnref:translation"&gt;&lt;a class="footnote-ref" href="#fn:translation"&gt;1&lt;/a&gt;&lt;/sup&gt;.  But the phrase carries a negative connotation of a person …&lt;/p&gt;</summary><content type="html">&lt;p&gt;無敵の人 romanizes to muteki no hito and translates to "Invincible Man". A common translation of 敵 is "enemy" and 無_ often means without _. On first reading, I translated the phrase literally to "a person without enemies" &lt;sup id="fnref:translation"&gt;&lt;a class="footnote-ref" href="#fn:translation"&gt;1&lt;/a&gt;&lt;/sup&gt;.  But the phrase carries a negative connotation of a person unafraid of consequences. On June 8 2008, 加藤 智大 (Kato Tomohiro) drove a rented truck into an Akihabara shopping center hitting five people. He exited the truck and stabbed 12 others, altogether resulting in seven dead and ten injured. Tomohiro was given the death penalty&lt;sup id="fnref:akihabara"&gt;&lt;a class="footnote-ref" href="#fn:akihabara"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The Akihabara Massacre led to 西村 博之 (Nishimura Hiroyuki) coining the phrase. The slang originates from his June 2008 blog post titled 無敵の人の増加 (The Rise in Invincible Men)&lt;sup id="fnref:blog"&gt;&lt;a class="footnote-ref" href="#fn:blog"&gt;3&lt;/a&gt;&lt;/sup&gt;. Hiroyuki's first line gets to the heart of the slang.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;元々、無職で社会的信用が皆無の人にとっては逮捕というのは、なんのリスクにもならないのですね。&lt;/p&gt;
&lt;p&gt;A person without a job or social reputation does not risk losing anything when arrested.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other incidents have been done by "Invincible Men"&lt;sup id="fnref:otherincidents"&gt;&lt;a class="footnote-ref" href="#fn:otherincidents"&gt;4&lt;/a&gt;&lt;/sup&gt;, but the slang reached peak relevance when Japan executed Tomohiro on July 2022 according to &lt;a href="https://trends.google.com/trends/explore?date=all&amp;amp;geo=JP&amp;amp;q=%E7%84%A1%E6%95%B5%E3%81%AE%E4%BA%BA&amp;amp;hl=en-US"&gt;Google search rates&lt;/a&gt;&lt;sup id="fnref:stats"&gt;&lt;a class="footnote-ref" href="#fn:stats"&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="muteki-no-hito-search-trends.png" src="assets/muteki-no-hito-search-trends.png"&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:translation"&gt;
&lt;p&gt;Because of my direct translation I related it to Vinland Saga's "I have no enemies". The character says the phrase  オレに敵なんかいない (ore ni teki nanka inai) instead. Funnily enough the anime was picked up by &lt;a href="https://www.tiktok.com/tag/ihavenoenemies?lang=en"&gt;english tiktok creators to represent a certain mindset&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:translation" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:akihabara"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/2008_Akihabara_massacre&amp;#160;&lt;a class="footnote-backref" href="#fnref:akihabara" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:blog"&gt;
&lt;p&gt;&lt;a href="http://hiro.asks.jp/46756.html"&gt;The blog&lt;/a&gt; is a short read if you can read Japanese. Hiroyuki proposes a method for reducing the amount of "invincible men".&amp;#160;&lt;a class="footnote-backref" href="#fnref:blog" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:otherincidents"&gt;
&lt;p&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E7%84%A1%E6%95%B5%E3%81%AE%E4%BA%BA_(%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88%E3%82%B9%E3%83%A9%E3%83%B3%E3%82%B0)#%E4%BA%8B%E4%BB%B6%E3%81%AE%E4%BE%8B"&gt;Other events wikipedia writers categorized as incidents by Invincible Men&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:otherincidents" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:stats"&gt;
&lt;p&gt;A word's relevance can be measured by usage rate data called n-gram instead of search rates. The largest corpus of data I know for this is &lt;a href="https://books.google.com/ngrams/"&gt;google's n-gram viewer&lt;/a&gt; which does not support Japanese. There is a paid version, but I didn't want to spend $100+ for this post.&amp;#160;&lt;a class="footnote-backref" href="#fnref:stats" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="blog"></category></entry><entry><title>Framework for Actionable Resume Feedback</title><link href="/framework-for-actionable-resume-feedback.html" rel="alternate"></link><published>2024-11-30T00:00:00-08:00</published><updated>2024-11-30T00:00:00-08:00</updated><author><name>Andrew Dang-Tran</name></author><id>tag:None,2024-11-30:/framework-for-actionable-resume-feedback.html</id><summary type="html">&lt;p&gt;Improving a resume can create opportunities and result in 6 figure differences in total compensation for software engineers. A resume signals competence at solving an employers' problems, but not everyone has the work history suited for their desired career. By creating levels of criteria for a resume, one can understand …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Improving a resume can create opportunities and result in 6 figure differences in total compensation for software engineers. A resume signals competence at solving an employers' problems, but not everyone has the work history suited for their desired career. By creating levels of criteria for a resume, one can understand an applicants' current position and which edits open opportunities. The post explores a framework for framing content and does not advise on content for a resume. I have software engineering expertise, but the principles apply to any career path.&lt;/p&gt;
&lt;h4&gt;Level 0 - Readability&lt;/h4&gt;
&lt;p&gt;Mistakes here will raise red flags with human and automated evaluations. A resume is readable if it is organized, consistent, and without any obvious writing errors. &lt;/p&gt;
&lt;h4&gt;Level 1 - Basics&lt;/h4&gt;
&lt;p&gt;A resume requires contact information, work history, accomplishments and career specific info. For a software engineer, it's specific technical proficiencies and keywords. With the correct keywords, an applicant passes automated filters. At this level, a human reviewer will understand the facts but not the value of the work.&lt;/p&gt;
&lt;h4&gt;Level 2 - Impact&lt;/h4&gt;
&lt;p&gt;Level 2 shows an understanding what is important to the business. Generally, impact can be found in the format &lt;code&gt;I had result X by doing Y&lt;/code&gt;. The closer the &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; are to solving an employers problem, the more convincing resume. Understanding the reasoning for a project is difficult after leaving a company, so remember to record the impact while working.&lt;/p&gt;
&lt;h4&gt;Level 3 - Details and Context&lt;/h4&gt;
&lt;p&gt;Ambiguous and relational words signal an opportunity to showcase various skills to an employer. Here are examples not matching level 3's criteria.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Improved application on mobile devices with a mobile UI overhaul for job applications in React&lt;/li&gt;
&lt;li&gt;Optimized the CI/CD process for faster build times&lt;/li&gt;
&lt;li&gt;Led the development of a real time chat feature securing a customer contract&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;With examples 1 and 2, an applicant seems to have technical skills with build processes and frontend development but the words &lt;code&gt;improved&lt;/code&gt; and &lt;code&gt;faster&lt;/code&gt; hide details. By adding details, an applicant communicates additional business and communication skills. Here are revised examples.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Doubled the application start rate on mobile devices from 500 to 1000 applicants a day with a mobile UI overhaul for job applications in React.&lt;/li&gt;
&lt;li&gt;Optimized the CI/CD process resulting in the p90 build time running 10x faster saving ~15 SWE hours a day.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Providing metrics with a baseline to ground the employer and show an applicant's history of quantifying their impact. People also leave out the surrounding project context. Here are examples contextualizing details an applicant may forget.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3a. Led the development of a real time chat feature on a 3 month deadline to secure a customer contract&lt;/p&gt;
&lt;p&gt;3b. Led the development of a real time chat feature coordinating changes across 4 teams to secure a customer contract.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The same project can showcase different skills with added context. In this case, the applicant's ability to handle time constraints and organizational complexity. Level 3 is met when every line has intent, but do not tell a cohesive story.&lt;/p&gt;
&lt;h4&gt;Level 4 - Narratives&lt;/h4&gt;
&lt;p&gt;Narratives disqualify jobs which aren't suited for the applicant but make the applicant appealing narrative matches the job. level 4 suits applicants whom desire a specific role. If an employer buckets the applicant into a concise statement when reading a resume, the resume tells an effective narrative. Here are 2 example ideas.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;New engineer growing fast with full stack engineering chops.&lt;/p&gt;
&lt;p&gt;DevOps engineering manager with experience building platform teams from the ground up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Every statement in the resume needs to contribute to the final narrative.&lt;/p&gt;
&lt;h4&gt;Applying the Levels&lt;/h4&gt;
&lt;p&gt;Recently, I've been giving resume feedback to multiple people in various career stages. When reading a resume, I go through each level until the resume fails to meet the criteria. The focus of the feedback depends on the level the resume fails to meet. I've found the framework helpful to give actionable feedback. Not all jobs require level 4 resumes. If I'm applying to be a cashier at McDonalds, I don't need a narrative for how I was born to be a cashier. Like any generalization, it's important to verify if the framework is helpful for the applicants' personal context and goals.&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>5000 hours of Dota 2 - A Lesson Learned from Wasted Time</title><link href="/5000-hours-of-dota-2-a-lesson-learned-from-wasted-time.html" rel="alternate"></link><published>2024-03-02T00:00:00-08:00</published><updated>2024-03-02T00:00:00-08:00</updated><author><name>Andrew Dang-Tran</name></author><id>tag:None,2024-03-02:/5000-hours-of-dota-2-a-lesson-learned-from-wasted-time.html</id><summary type="html">&lt;p&gt;I've crossed the threshold of playing 5000 hours of &lt;a href="https://www.dota2.com/home"&gt;Dota 2&lt;/a&gt;&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;5&lt;/a&gt;&lt;/sup&gt;. Dota 2 is a competitive video game where a team of 5 human players play against an opposing team of 5 human players and that's all you need to know for this post. According to my lifetime estimates …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've crossed the threshold of playing 5000 hours of &lt;a href="https://www.dota2.com/home"&gt;Dota 2&lt;/a&gt;&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;5&lt;/a&gt;&lt;/sup&gt;. Dota 2 is a competitive video game where a team of 5 human players play against an opposing team of 5 human players and that's all you need to know for this post. According to my lifetime estimates&lt;sup id="fnref:6"&gt;&lt;a class="footnote-ref" href="#fn:6"&gt;6&lt;/a&gt;&lt;/sup&gt;, it's the activity I've spent the third most time in outside of sleep and work&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;~14,000 hours of schooling&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;~6,528 hours swimming competitively&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;~5,000 hours of Dota 2&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's an understatement to say I've wasted a lot of time playing Dota 2, but I've built up a new mentality along the way. I've often likened this mentality to a Zen state due to detaching joy from winning and letting go of anger in a toxic environment.&lt;/p&gt;
&lt;h4&gt;The Zen of Solo Queue&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;The Root of Suffering is Attachment
  -- Gautama Buddha &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Solo queuing is when you play with four random teammates and it's like joining a new team at work. Everyone on the team usually has different goals for their lives but what ties us together is the need for money to survive. Players in Dota 2 are supposed to be joined by the shared incentive to win the game, but losing in a video game doesn't affect you much. It's as if every teammate at work was a trust fund baby loudly expressing quitting the project at any roadblock. It's a recipe for building resentment and regularly happens in competitive video games. I cared about winning every game and many tables were smashed.&lt;/p&gt;
&lt;p&gt;The gaming community calls bad play induced by anger "tilting". Trying to win while tilting taught me life problems have an emotional core and how I should address the emotions is based on how much control I have. Nowadays, I no longer depend on four strangers to have fun in Dota and I'm generally less irritable.&lt;/p&gt;
&lt;p&gt;Examples of utilizing these lessons outside of Dota 2 are starting a new hobby, or handling success at work. I've tried to pick up writing many times before. The emotion which stopped me was feelings of inadequacy about my writing. Targeting those emotions by writing a list of reasons why it's okay for my writing to be trash helped my writing more time trying to write. At work, I'm satisfied with my output based on my own criteria even if I don't get the promotion or rewarded for it. I know I have an impact on the end result but a large portion of it is out of my control since it relies on how people represent and interpret my work. The distinction between these are when I'm writing, I have full control of the my emotions and behavior. In the work scenario, I lack full control and need to detach from the outcome. I do what I can to effect the outcome but live happily with the results.&lt;/p&gt;
&lt;p&gt;I specifically learned these concepts while playing Dota. I definitely could have learned these lessons earlier in life from schooling or swimming. What was stopping me from learning in the past?&lt;/p&gt;
&lt;h4&gt;Schooling, Swimming, and the Protestant Work Ethic&lt;/h4&gt;
&lt;p&gt;Traditional schooling and swimming are both individual efforts with a clear success or failure binary with a focus on effort. Put time into studying or practicing and succeed. Rarely are you put into a position to fail due to a decision made by someone else. Just thinking about it for 5 minutes, it became obvious to me I was unlikely to learn the lesson earlier. Perhaps it's not generalizable to other people and if I participated in a team based sport instead, I would have  learned how to be process focused. But I've taken a trodden traditional path indicating to me,  engaging with any activity can have productive value.&lt;/p&gt;
&lt;h4&gt;There is always more to learn&lt;/h4&gt;
&lt;p&gt;Through Dota 2 I found a repetitive environment which helped me internalize a lesson not conducive to being learned with my background. Generalizing the idea, any activity can teach a lesson which may have been difficult to learn given your history. There is still a danger with these fun activities as mindlessly spend 5000 hours not actively engaged is easy. I definitely autopiloted and wasted time. But I believe the lesson is not to pull away from "wasted" time you love, but to dive deeper. &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;6 years at 48 weeks a year with 40 hours a week adds up to be ~11,520 hours of working.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;age 6-10 at 4 hours a week. age 10-14 at 10 hours a week. age 14-18 at 20 hours a week. 48 weeks a year for all those years.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;According to Steam. Probably has some away from keyboard time with Dota 2 launched included.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;From &lt;a href="https://www.oecd-ilibrary.org/sites/e13bef63-en/1/3/5/1/index.html?itemId=/content/publication/e13bef63-en&amp;amp;_csp_=a4f4b3d408c9dd70d167f10de61b8717&amp;amp;itemIGO=oecd&amp;amp;itemContentType=book#tablegrp-d1e29175-b6689298e9"&gt;2023 education at a glance it takes around 12023 hours for primary and secondary education&lt;/a&gt;. I used the national center for education statistics to determine the &lt;a href="https://nces.ed.gov/pubs/eiip/eiip1s01.asp"&gt;definition for primary and secondary education in the US&lt;/a&gt;. For &lt;a href="https://www.utexas.edu/"&gt;UT&lt;/a&gt; computer science, a degree is 120 credit hours. Since a semester is around 15 weeks and on average one will have 15 hours per semester it'll be 1800 hours. Estimated ~14k hours of schooling.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;Though Dota 2 is not for everyone, I love this game and would promote it to any multiplayer player vs player game enjoyers.&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:6"&gt;
&lt;p&gt;These are lower bound estimates made around January 2024.&amp;#160;&lt;a class="footnote-backref" href="#fnref:6" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="blog"></category></entry><entry><title>Understanding Requirements Based Unit Testing</title><link href="/understanding-requirements-based-unit-testing.html" rel="alternate"></link><published>2024-01-21T00:00:00-08:00</published><updated>2024-01-21T00:00:00-08:00</updated><author><name>Andrew Dang-Tran</name></author><id>tag:None,2024-01-21:/understanding-requirements-based-unit-testing.html</id><summary type="html">&lt;p&gt;Our team was unit testing business logic but it was difficult to maintain. The function originally had 4 inputs and 24 tests. A new requirement added 2 new inputs which led to 96 tests with the current testing strategy. The team wanted to improve the maintainability for future changes.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Our team was unit testing business logic but it was difficult to maintain. The function originally had 4 inputs and 24 tests. A new requirement added 2 new inputs which led to 96 tests with the current testing strategy. The team wanted to improve the maintainability for future changes.&lt;/p&gt;
&lt;p&gt;The function looked like below&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; and due to the encoded business logic, the team had a reasonable expectation the function would continue adding inputs. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;domain of a, b, c, d, e = {0, 1}&lt;/span&gt;
&lt;span class="sd"&gt;domain of f = {0, .5, 1}&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;function_with_unmaintainable_tests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;generic_logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Due to the function's discrete input domain, the test clarified a tension between comprehensiveness and maintainability for me. The team originally used a &lt;strong&gt;comprehensive testing strategy&lt;/strong&gt;&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;5&lt;/a&gt;&lt;/sup&gt;. A comprehensive testing strategy verifies the domain of all possible inputs. I've primarily used this approach for ideating unit tests in the past, leading to spending 10x the time on tests after implementing a change. That being said, comprehensive testing is a valid testing approach for many scenarios. It's useful for fixed utility functions or when an input domain has many discrete edge cases. For business logic the team expected to change, it burdened velocity&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The team originally enumerated every possible case occurring in the system, but which subset of tests verified the important uses of the function?&lt;/p&gt;
&lt;p&gt;To understand which tests are important, put the function in the business context&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;. I've heard the method called &lt;strong&gt;requirements based testing&lt;/strong&gt; but this situation clarified the concept.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;domain of override 1-5 = {0, 1}&lt;/span&gt;
&lt;span class="sd"&gt;domain of permissions = {0, .5, 1}&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;override1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;override1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;override2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;override3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;override4&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;override5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;authorization_logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With the function within the context of authorizing an entity, the business only cares when it overrides their permissions or applying the &lt;code&gt;authorization_logic&lt;/code&gt; logic. Mapping to inputs and tests, the only tests we care about have these inputs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(override1 = 1 XOR override2 = 1 XOR override3 = 1 XOR override4 = 1 XOR override5 = 1) AND authorization_logic() != 1&lt;/code&gt; which tests overrides&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;override1 = 0 AND override2 = 0 AND override3 = 0 AND override4 = 0 AND override5 = 0&lt;/code&gt; which tests the general authorization logic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="unit_test_business_requirements_4.png" src="assets/unit_test_business_requirements_4.png"&gt;&lt;/p&gt;
&lt;p&gt;Applying the requirements based testing strategy cut the total tests from 96 to 8. One can assert the existing unit tests would not catch a bug involving two interacting overrides returning 0. They'd be right! but thinking of the code needed to generate the situation, it's unlikely to happen without being caught in code review.  For that small risk our team becomes more nimble. Any additional inputs would be a few test and I still have confidence the business use cases will work. For unit testing changing business logic, requirements based testing filters the domain of inputs to business critical inputs trading comprehensiveness for maintainability.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The function wasn't actually written in python and we had reasoning for the existing types and allowing values which were not important. The code base also has other discrete value input functions encoding business logic. Solving the maintainability problem would have implications across a large percentage of the code.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Google doesn't actually have 5 overrides for authorization. I can't go into too much detail because the real business logic is confidential but I hope the summary gets the point across.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;A teammate maintained a script which generated all the permutations of the test to continue comprehensive testing.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;Because of the context of each override we know that the overrides will rarely interact. Thus XOR instead of OR.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;While writing this blog post, I realized that it's actually only a comprehensive correctness test strategy. We could have also verified the function ran under 1ms or it produced no side effects. We already filtered some tests implicitly deemed not important.&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="blog"></category></entry></feed>